<?php
/**
 * @file
 * Adds javascript libraries to pages.
 */

use Drupal\file\Entity\File;

/**
 * Implements hook_proprocess_page().
 *
 * Adds javascript libraries and services to the pages where it's needed.
 */
function grundsalg_slideshow_preprocess_page(&$variables) {
  // Add angular to certain node types.
  if (isset($variables['node'])) {
    // This empty array is need to prevent pages from not loading JS.
    $variables['#attached']['drupalSettings']['grundsalg_slideshow'] = array();

    // Add JavaScript. It's added to all pages as grundsalg_tabs may be loaded
    // on the page and if the slide-show controller is not load it will give an
    // error. But as slide-show is used on non tabs pages, we don't known when
    // and where it's used. So we load it on all pages.
    $variables['#attached']['library'][] = 'grundsalg_slideshow/angular';

    // Provide module path to js.
    $variables['#attached']['drupalSettings']['grundsalg_slideshow'] = array(
      'app_dir' => '/' . \Drupal::service('extension.list.module')->getPath('grundsalg_slideshow') . '/js',
    );

    // Add image urls and alt to js (if page have images).
    if (isset($variables['node']->field_media_image->target_id)) {
      foreach ($variables['node']->get('field_media_image') as $key => $item) {
        // We need to check if the file exists, as it may have been deleted and
        // get field below will make WPOD.
        $file = \Drupal::entityTypeManager()->getStorage('media')->load($item->target_id);

        if (!empty($file)) {
          // Fetch each referenced image entity.
          $image_entity = $file->get('field_itk_media_image_upload');
          $id = $image_entity->target_id;
          $alt_text = $image_entity->alt;
          $file = File::load($id);

          // Create render array for responsive images.
          $image_render_array = _grundsalg_slideshow_load_image($file, 'grundsalg_main_image', $alt_text);

          // Send rendered html to javascript.
          $image_html = render($image_render_array);
          $variables['#attached']['drupalSettings']['grundsalg_slideshow']['images'][$key] = array(
            'html' => $image_html,
          );
        }
      }
    }
  }
}

/**
 * Render image entity as responsive image.
 *
 * @param $file
 *   The file that is used to generate the images.
 * @param $responsive_image_style_id
 *   The id of the image style to use.
 * @param string $alt_text
 *   The alt text for the image.
 *
 * @return array|null
 *   Render array with the images or null if file not given.
 */
function _grundsalg_slideshow_load_image($file, $responsive_image_style_id, $alt_text) {
  if ($file) {
    // Load main_image.
    if ($file) {
      $variables = array(
        'responsive_image_style_id' => $responsive_image_style_id,
        'uri' => $file->getFileUri(),
      );

      // The image.factory service will check if our image is valid.
      $image = \Drupal::service('image.factory')->get($file->getFileUri());
      if ($image->isValid()) {
        $variables['width'] = $image->getWidth();
        $variables['height'] = $image->getHeight();
      }
      else {
        $variables['width'] = NULL;
        $variables['height'] = NULL;
      }

      // Create render array.
      $result_image = [
        '#attributes' => array(
          'title' => $alt_text,
          'alt' => $alt_text,
        ),
        '#theme' => 'responsive_image',
        '#width' => $variables['width'],
        '#height' => $variables['height'],
        '#responsive_image_style_id' => $variables['responsive_image_style_id'],
        '#uri' => $variables['uri'],
      ];

      // Add the file entity to the cache dependencies.
      // This will clear our cache when this entity updates.
      $renderer = \Drupal::service('renderer');
      $renderer->addCacheableDependency($result_image, $file);

      // Return the render array as block content.
      return $result_image;
    }
  }

  return NULL;
}
